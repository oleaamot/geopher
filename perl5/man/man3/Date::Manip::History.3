.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Date::Manip::History 3"
.TH Date::Manip::History 3 "2022-06-01" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip::History \- Twenty years and still going strong
.SH "TWENTY YEARS"
.IX Header "TWENTY YEARS"
I just realized (Dec 2015) that Date::Manip turned twenty years old
earlier this year, so I wanted to write some thoughts I have about
Date::Manip.
.PP
The history of Date::Manip can be broken into several periods.
.IP "Birth of Date::Manip (1995\-1996)" 4
.IX Item "Birth of Date::Manip (1995-1996)"
1995 was the year I really started using perl to automate some of
my common tasks.  At the time, I was running programs using a number
of different batch systems that needed dates entered in a variety
of different formats.  It was frustrating to remember what format for
what batch system, so I wrote some wrappers which would take a few
common formats that I wanted to use and would turn those dates into
whatever format the batch system needed.
.Sp
After a few different wrapper scripts (where I copied the date handling
code between the scripts), I gathered all of the date routines into
one package.
.Sp
This was the birth of Date::Manip.
.Sp
I kept it that way for about half a year.  By that time, I was thoroughly
in love with perl and wanted to contribute.
.Sp
At the time, \s-1CPAN\s0 was just a fledgling site, but in October, I released
my first package.  It wasn't really a module at that time... it was
crudely put together and extremely limited use.  Even so, it got some
very positive initial feedback which spurred the early growth.
.Sp
There were several private versions followed by 4 public releases (4.0
through 4.3) during this period.
.Sp
Soon, I had adopted many of the best practices of the day and converted
it to a full-blown module.
.IP "Active development (1996\-2001)" 4
.IX Item "Active development (1996-2001)"
The next 5 years were extremely active.  Based on suggestions and requests,
functionality increased dramatically, and before long, Date::Manip was
considered the goto module for Date operations.
.Sp
During this period, a number of other modules came along that did a small
subset of the functions of Date::Manip (most of them significantly faster),
but none had the scope of Date::Manip.
.Sp
During this period, I recognized that the single biggest weakness was
the inability to correctly handle timezones and daylight saving time.
Towards the end of this period (2000 I believe), I began a project to
rewrite Date::Manip, but I didn't have the time needed to really carry it
out at that time.
.Sp
Another weakness was that Date::Manip grew in a random way.  As ideas
and suggestions came, I added them.  There was little planning or
forethought involved, and that led to it not having a consistent
\&\s-1API.\s0
.Sp
1998 did see the addition of Recurrences.  Although not an extremely
widely used piece of functionality, I regard this as the single most
important contribution I have ever made.  I developed the notation for
specifying recurring events, and no other notation has ever come close
to matching it's power and flexibility.
.Sp
This period, starting with the first release in a full module form,
included 26 releases (from 5.00 to 5.40).
.IP "Minimal maintenance (2001\-2008)" 4
.IX Item "Minimal maintenance (2001-2008)"
During these years, I was able to devote time needed to maintain the
existing module, but not to do major development.
.Sp
As a result, the rewrite project remained incomplete (and in fact, it
was barely started).
.Sp
During this time, due to the fact that no other module could handle
timezones correctly, DateTime arrived in 2003.  It featured a nice
object-oriented interface, and handled timezones.
.Sp
Over the next few years, it became the de facto standard for date
handling in perl.
.Sp
This period included only 8 releases (5.42 to 5.54).
.IP "Rewrite (2009\-2010)" 4
.IX Item "Rewrite (2009-2010)"
In 2009, I decided it was time to fix the timezone problems in Date::Manip .
Some people might see this as a waste of time due to the fact that DateTime
existed, but I had several thoughts.
.Sp
First, many people continued to use Date::Manip.  This was evident by
the number of emails I continued to receive.
.Sp
Second, there were still things that Date::Manip did better than DateTime
including recurrences and parsing.
.Sp
Third, I love my module, and didn't want to see it die.  I'll continue to
use it, even if nobody else does.
.Sp
So, I set out to fix it.  It turned out to be a complete rewrite, but in
the end, version 6 was released with full timezone handling, even better
parsing, and quite a few other features.
.Sp
Date::Manip was once again very much alive.
.Sp
This period featured 13 releases (6.00 to 6.14) with an additional
2 maintenance releases of version 5.
.IP "Active maintenance (2010\-present)" 4
.IX Item "Active maintenance (2010-present)"
Although primarily in maintenance mode (due to the fact that it does
pretty much everything that it was designed to do), active maintenance
continues.  There is also some development and a large number of
significant improvements have been made in this period.
.Sp
I make regular releases to update the timezone information, fix bugs,
and add the occasional new features.
.Sp
For the foreseeable future, Date::Manip will remain active, and fully
capable of handling any common date operation.
.Sp
Since 6.14, there have been an average of about 5 releases per year.
.SH "ONE OF THE OLDEST"
.IX Header "ONE OF THE OLDEST"
I was curious to see how many other modules are out there that have
survived as long as Date::Manip.
.PP
The first public release of Date::Manip (though it was not a module
at that point) was version 4.0 on 13\-Aug\-1995.  The first public
release to \s-1CPAN\s0 was version 4.2 released on 23\-Oct\-1995.
.PP
I got a list of all \s-1CPAN\s0 modules from the wayback machine for 2000
(the earliest version of the list that I could find).  Then I checked
each of these authors on backpan to see which of these authors had
packages (.tar.gz or .tgz files) released prior to 23\-Oct\-1995.
.PP
I found that at the time Date-Manip 4.2 was released there were
.PP
.Vb 2
\&   32 authors
\&   70 packages
.Ve
.PP
There are currently (Aug 2017) over 190,000 modules by over 13,000 authors.
So Date::Manip got involved in \s-1CPAN\s0 very early.
.PP
Next, I tried to determine which of those authors and packages are
still active.  I'm not completely sure about some of the packages because
frequently, those old packages have changed maintainers, been renamed,
or been incorporated into other packages.  So the number of active
packages is actually a lower limit.
.PP
I found that:
.PP
.Vb 3
\&   13 of the 32 authors are active today
\&   21 of the 70 packages are active today
\&   7 of those packages are still maintained by the original author
.Ve
.PP
An active author is one who has released something in the past 3 years.
An active module is one that has been updated in the past 3 years.
.PP
I apologize if I have missed anyone.
.PP
The 7 packages which are older than Date::Manip and are still actively
maintained by their original author (though they may have been renamed)
are:
.PP
.Vb 7
\&   ILYAZ  MathPari     23\-Jan\-1995
\&   ANDK   Symdump      16\-Aug\-1995
\&   PMQS   Filter       28\-Aug\-1995
\&   GAAS   libwww\-perl  16\-Sep\-1995
\&   LDS    GD           17\-Sep\-1995
\&   MEWP   sybperl      02\-Oct\-1995
\&   TOMZO  Quota        10\-Oct\-1995
.Ve
.PP
Congratulations to those authors who have been with perl since the
beginning.  I'm proud to be in their company!  And congratulations to
\&\s-1ILYAZ\s0 for having the oldest module in \s-1CPAN\s0!
.PP
If I have missed anyone, please let me know.
.PP
2022 Update:
.PP
Three of the above packages have now been removed from the list.  Symdump
has not been updated since 2017, though the author is still active, and
the package is still available.
.PP
Filter is no longer available on \s-1CPAN\s0 (though the author is still active).
.PP
\&\s-1GD\s0 is still maintained but by a new author.
.PP
So, it seems like we're down to 4 packages that are actively maintained by
the original author that are older than Date::Manip.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Date::Manip        \- main module documentation
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)
