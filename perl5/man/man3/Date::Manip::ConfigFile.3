.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Date::Manip::ConfigFile 3"
.TH Date::Manip::ConfigFile 3 "2022-06-01" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip::ConfigFile \- sample config file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Date::Manip is a highly configurable module.  Many of the options
can be set in a config file.  This document includes a sample config
file.
.PP
The config file consists of three sections.  The first section is
config variables.  This is described more fully in the Date::Manip::Config
document.
.PP
The second section is the holiday definition section.  The third section
is the event definition section.  These are both described more fully
in the Date::Manip::Holidays document.
.SH "SAMPLE CONFIG FILE"
.IX Header "SAMPLE CONFIG FILE"
The sample config file below works for newer versions of Date::Manip.
Some of the config variables may change, or be deprecated, and some
may not work with earlier versions of Date::Manip, so it is strongly
suggested that you check out the documentation for the version of
Date::Manip you are using to confirm any of the config variables you
want to include.
.PP
.Vb 5
\&  ################################
\&  # CONFIG VARIABLES
\&  ################################
\&  # See Date::Manip::Config man page for a description of all
\&  # config variables.
\&
\&  # To include configuration information from additional
\&  # config files:
\&
\&  ConfigFile              = /path/to/another/config/file
\&  ConfigFile              = /path/to/another/config/file2
\&
\&  # For handling other languages
\&
\&  Language                = English
\&  DateFormat              = US
\&  Encoding                =
\&
\&  # Set the current timezone:
\&
\&  SetDate                 = now,America/New_York
\&
\&  # Set the work work
\&
\&  WorkWeekBeg             = 1
\&  WorkWeekEnd             = 5
\&  WorkDay24Hr             = 0
\&  WorkDayBeg              = 08:00
\&  WorkDayEnd              = 17:00
\&  TomorrowFirst           = 1
\&
\&  # Misc. variables
\&
\&  YYtoYYYY                = 89
\&  FirstDay                = 1
\&  Jan1Week1               = 0
\&  Printable               = 0
\&  DefaultTime             = midnight
\&  RecurRange              = none
\&
\&  ################################
\&  # HOLIDAYS
\&  ################################
\&  # See the Date::Manip::Holidays man page for a description of
\&  # this section.
\&  *HOLIDAYS
\&
\&  # FEDERAL HOLIDAYS
\&  ##################
\&
\&  # You can express New Year\*(Aqs Day as the actual day (Jan 1)
\&  # or the observed day (Jan 1 or the nearest week day).
\&  # You can\*(Aqt include BOTH because once a day is marked as
\&  # a holiday, a second definition will treat it the same
\&  # as a weekend and choose another day to assign the holiday
\&  # to (so there would be two days designated as New Years).
\&
\&  # Jan 1                         = New Year\*(Aqs Day
\&  1*1:0:1:0:0:0*DWD               = New Year\*(Aqs Day (observed)
\&
\&  # Two different ways to defined MLK day
\&
\&  third Monday in Jan             = Martin Luther King Jr.\*(Aqs Birthday
\&  # 1*1:3:1:0:0:0                 = Martin Luther King Jr.\*(Aqs Birthday
\&
\&  # Observed by federal employees in Washington D.C.
\&
\&  # Jan 20                        = Inauguration day
\&  third Monday in Feb             = Washington\*(Aqs Birthday
\&  last Monday in May              = Memorial Day
\&  1st Monday in Sep               = Labor Day
\&  second Monday in Oct            = Columbus Day
\&
\&  # Jul 4                         = Independence Day
\&  1*7:0:4:0:0:0*DWD               = Independence Day
\&
\&  # 11/11                         = Veterans Day
\&  1*11:0:11:0:0:0*DWD             = Veteran\*(Aqs Day
\&
\&  # To define both Thanksgiving and the day after, use the
\&  # following two lines:
\&
\&  fourth Thu in Nov               = Thanksgiving
\&  1*11:4:4:0:0:0*FD1              = Day after Thanksgiving
\&
\&  # Dec 25                        = Christmas
\&  1*12:0:25:0:0:0*DWD             = Christmas
\&
\&  # SAMPLE HOLIDAYS
\&  ##################
\&
\&  # You can define a one\-time\-only holiday by specifying
\&  # the day and year.
\&
\&  6/2/1999                        = A special test holiday for 1999
\&
\&  ################################
\&  # EVENTS
\&  ################################
\&  # See the Date::Manip::Holidays man page for a description of
\&  # this section.
\&  *EVENTS
\&
\&  2000\-02\-01               = Event01
\&  2000\-02\-01\-12:00:00      = Event02
\&  02\-01                    = Event03
\&  02\-01 12:00:00           = Event04
\&  1*2:0:3:13:00:00         = Event05
\&
\&  2000\-02\-05 10:00:00 ; 2000\-02\-05 10:59:59 = Event06
\&  2000\-02\-05          ; 2000\-02\-06          = Event07
\&  02\-05               ; 02\-06               = Event08
\&
\&  2000\-02\-07 10:00:00 ; 0:0:0:0:3:0:0       = Event09
\&  02\-07 10:00:00      ; 0:0:0:0:4:0:0       = Event10
\&  1*2:0:7:10:00:00    ; 0:0:0:0:5:0:0       = Event11
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Date::Manip        \- main module documentation
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)
