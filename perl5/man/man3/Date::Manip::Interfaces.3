.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Date::Manip::Interfaces 3"
.TH Date::Manip::Interfaces 3 "2022-06-01" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip::Interfaces \- A description of functional and OO interfaces
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
There are three different ways to use Date::Manip .  A complete description
of each is included below.  They are:
.IP "Functional interface (version 5)" 4
.IX Item "Functional interface (version 5)"
Date::Manip version 5 runs on very old versions of perl.  If you need
to use Date::Manip with a version of perl older than 5.10, this is the
only interface available.
.IP "Functional interface (version 6)" 4
.IX Item "Functional interface (version 6)"
When Date::Manip was rewritten (version 6), it made use of some features
of perl 5.10 .  This is the recommended interface if you are supporting
a script that uses the functional interface, but where a newer version
of perl is available.
.IP "Object-oriented interface" 4
.IX Item "Object-oriented interface"
The \s-1OO\s0 interface is the recommended interface wherever possible.  It
is the only one with access to the full functionality of the module.
.SH "VERSION 5 AND VERSION 6"
.IX Header "VERSION 5 AND VERSION 6"
Date::Manip version 5.xx was available for many years, but suffered
from several weaknesses.  It was slow, and did not handle timezones
or daylight saving time correctly.  It was written as a functional
interface, even though an object-oriented interface would have been
better.  It did have the advantage of running on very old versions of
perl (it is known to work on perl 5.6 and may work on even older
versions of perl).
.PP
Date::Manip version 6.00 was a complete rewrite of the module.  For
detailed information about the differences, please refer to the
Date::Manip::Changes5to6 document.  The rewrite was needed in order
to handle timezone operations, in addition to many other improvements
including much better performance and more robust parsing.
.PP
The rewrite made use of features introduced in perl 5.10 which made
the date parsing routines significantly cleaner.  In addition, the
6.xx release was written as an object oriented set of modules which
are much more powerful than the older functional interface.  For
backward compatibility, a new functional interface was rewritten
(which is simply a set of wrapper functions which call the \s-1OO\s0 methods)
which is almost entirely backward compatible with the version 5.xx
interface.
.PP
The Date::Manip distribution includes all three of these interfaces:
the older version 5 interface, and both the new \s-1OO\s0 interface and
the backward compatible functional interface.  Also, all three are
installed, so you can use whichever interface is appropriate.
.PP
Since there are three different interfaces available, choosing the
interface is the necessary.
.PP
If you are running on a system with a very old version of perl (older than
5.10), the version 5 interface is your only option.
.PP
If you are on a system running a newer version of perl, but need to
support a script that was written using the functional interface, then
you can use the version 6 functional interface.
.PP
For everyone else, it is strongly recommended that you use the object-oriented
interface.
.PP
A more detailed description of each interface is included below.  If
you already know which interface you want to use, just go to the
\&\*(L"\s-1SEE ALSO\*(R"\s0 in Date::Manip section for documentation for each
interface.
.SH "FUNCTIONAL INTERFACE (VERSION 5)"
.IX Header "FUNCTIONAL INTERFACE (VERSION 5)"
When using a version of perl older than 5.10, this is the only
interface available.  This interface is documented in the
Date::Manip::DM5 document.  This interface has several weaknesses that
need to be understood when using it:
.IP "\fBLimited Support\fR" 4
.IX Item "Limited Support"
The version 5 functional interface is no longer being developed, and
only limited support is available for it.
.Sp
As of December 2012, no development will be done, and I will not
correct any remaining bugs in version 5.  If a patch is supplied by
someone else to fix bugs, I will apply it, provided it applies
cleanly, and the resulting code continues to pass all tests.  I will
not apply patches to add features.
.Sp
I will continue to distribute version 5 for several years.  I do not
have a date in mind where version 5 will be removed.
.IP "\fBLimited Time Zone Support\fR" 4
.IX Item "Limited Time Zone Support"
Time zone support is extremely limited, and is often incorrect. The lack
of time zone support was the primary reason for rewriting Date::Manip.
.Sp
The version 5 interface does not handle daylight saving time changes
correctly.
.IP "\fBPerformance Issues\fR" 4
.IX Item "Performance Issues"
Considerable time has been spent speeding up Date::Manip, and fairly
simple benchmarks show that version 6 is around twice as fast as
version 5.
.PP
Feel free to email me concerns and comments.
.SH "FUNCTIONAL INTERFACE (VERSION 6)"
.IX Header "FUNCTIONAL INTERFACE (VERSION 6)"
The version 6 functional interface is almost completely identical to
the version 5 functional interface, except that it uses the
object-oriented modules to do all the real work.
.PP
Time zone support is greatly improved, but is still somewhat limited.
Since the version 6 interface is backward compatible, dates do not
store time zone information in them, so the programmer is responsible
for keeping track of what time zone each date is in. If you want full
access to the time zone support offered in Date::Manip, you have to
use the object-oriented interface.
.PP
For the most part, scripts written for older versions of Date::Manip
will continue to work (and scripts written for the version 6
functional interface will run with the version 5 interface), however
in a few cases, you may need to modify your scripts.  Please refer to
the Date::Manip::Migration5to6 document for a list of changes which
may be necessary.
.SH "OBJECT-ORIENTED INTERFACE"
.IX Header "OBJECT-ORIENTED INTERFACE"
As of 6.00, Date::Manip consists of a set of \s-1OO\s0 modules. Each have
their own document (see the \*(L"\s-1SEE ALSO\*(R"\s0 in Date::Manip section).
.PP
The \s-1OO\s0 interface consists of the following modules: Date::Manip::Date,
Date::Manip::Delta, Date::Manip::Recur, Date::Manip::TZ, and
Date::Manip::Base.
.PP
The object-oriented interface is the only way to get the full
functionality of Date::Manip. It fully support time zones (and
daylight saving time).
.SH "SELECTING AN INTERFACE"
.IX Header "SELECTING AN INTERFACE"
If you are running an older version of perl, the version 5 functional
interface is the only one available to you, and it will automatically
be used.
.PP
If you are running a newer version of perl (5.10 or higher), you can
use the object-oriented modules by loading them directly, or you can
use a functional interface.
.PP
If you use a functional interface, it will default to the version 6
interface, but you can choose to run the version 5 interface in one
of three ways:
.IP "Using the \s-1OO\s0 interface" 4
.IX Item "Using the OO interface"
By including any of the following:
.Sp
.Vb 5
\&   use Date::Manip::Date;
\&   use Date::Manip::Delta;
\&   use Date::Manip::Recur;
\&   use Date::Manip::TZ;
\&   use Date::Manip::Base;
.Ve
.Sp
you have access to the \s-1OO\s0 interface for the appropriate types of objects.
.IP "Use the default functional interface" 4
.IX Item "Use the default functional interface"
By including:
.Sp
.Vb 1
\&   use Date::Manip;
.Ve
.Sp
in your script, one of the functional interfaces will be loaded.  If you
are running a version of perl older than 5.10, it will automatically be
the version 5 interface.  If you are running a newer version of perl,
it will automatically load the version 6 interface.
.IP "\s-1DATE_MANIP\s0 environment variable" 4
.IX Item "DATE_MANIP environment variable"
By setting the \s-1DATE_MANIP\s0 environment variable to '\s-1DM5\s0' before running
the perl script, the version 5 interface will be used.
.IP "Date::Manip::Backend variable" 4
.IX Item "Date::Manip::Backend variable"
Alternately, you can set the Date::Manip::Backend variable to be '\s-1DM5\s0'
before loading the module. Typically, this will be done in the following
way:
.Sp
.Vb 4
\&   BEGIN {
\&        $Date::Manip::Backend = \*(AqDM5\*(Aq;
\&   }
\&   use Date::Manip;
.Ve
.PP
Once a functional interface is loaded, you cannot switch between the
version 5 and version 6 interfaces.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Date::Manip        \- main module documentation
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)
