.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MDC 3"
.TH MDC 3 "2020-07-22" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Log::Log4perl::MDC \- Mapped Diagnostic Context
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Log::Log4perl allows loggers to maintain global thread-specific data, 
called the Nested Diagnostic Context (\s-1NDC\s0) and 
Mapped Diagnostic Context (\s-1MDC\s0).
.PP
The \s-1MDC\s0 is a simple thread-specific hash table, in which the application
can stuff values under certain keys and retrieve them later
via the \f(CW"%X{key}"\fR placeholder in 
\&\f(CW\*(C`Log::Log4perl::Layout::PatternLayout\*(C'\fRs.
.ie n .IP "Log::Log4perl::MDC\->put($key, $value);" 4
.el .IP "Log::Log4perl::MDC\->put($key, \f(CW$value\fR);" 4
.IX Item "Log::Log4perl::MDC->put($key, $value);"
Store a value \f(CW$value\fR under key \f(CW$key\fR in the map.
.ie n .IP "my $value = Log::Log4perl::MDC\->get($key);" 4
.el .IP "my \f(CW$value\fR = Log::Log4perl::MDC\->get($key);" 4
.IX Item "my $value = Log::Log4perl::MDC->get($key);"
Retrieve the content of the map under the specified key.
Typically done by \f(CW%X{key}\fR in
\&\f(CW\*(C`Log::Log4perl::Layout::PatternLayout\*(C'\fR.
If no value exists to the given key, \f(CW\*(C`undef\*(C'\fR is returned.
.ie n .IP "my $text = Log::Log4perl::MDC\->\fBremove()\fR;" 4
.el .IP "my \f(CW$text\fR = Log::Log4perl::MDC\->\fBremove()\fR;" 4
.IX Item "my $text = Log::Log4perl::MDC->remove();"
Delete all entries from the map.
.IP "Log::Log4perl::MDC\->\fBget_context()\fR;" 4
.IX Item "Log::Log4perl::MDC->get_context();"
Returns a reference to the hash table.
.PP
Please note that all of the methods above are class methods, there's no
instances of this class. Since the thread model in perl 5.8.0 is
\&\*(L"no shared data unless explicitly requested\*(R" the data structures
used are just global (and therefore thread-specific).
.SH "LICENSE"
.IX Header "LICENSE"
Copyright 2002\-2013 by Mike Schilli <m@perlmeister.com> 
and Kevin Goess <cpan@goess.org>.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Please contribute patches to the project on Github:
.PP
.Vb 1
\&    http://github.com/mschilli/log4perl
.Ve
.PP
Send bug reports or requests for enhancements to the authors via our
.PP
\&\s-1MAILING LIST\s0 (questions, bug reports, suggestions/patches): 
log4perl\-devel@lists.sourceforge.net
.PP
Authors (please contact them via the list above, not directly):
Mike Schilli <m@perlmeister.com>,
Kevin Goess <cpan@goess.org>
.PP
Contributors (in alphabetical order):
Ateeq Altaf, Cory Bennett, Jens Berthold, Jeremy Bopp, Hutton
Davidson, Chris R. Donnelly, Matisse Enzer, Hugh Esco, Anthony
Foiani, James FitzGibbon, Carl Franks, Dennis Gregorovic, Andy
Grundman, Paul Harrington, Alexander Hartmaier  David Hull, 
Robert Jacobson, Jason Kohles, Jeff Macdonald, Markus Peter, 
Brett Rann, Peter Rabbitson, Erik Selberg, Aaron Straup Cope, 
Lars Thegler, David Viner, Mac Yang.
