.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "JavaMap 3"
.TH JavaMap 3 "2020-07-22" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Log::Log4perl::JavaMap \- maps java log4j appenders to Log::Dispatch classes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&     ###############################
\&     log4j.appender.FileAppndr1        = org.apache.log4j.FileAppender
\&     log4j.appender.FileAppndr1.File   = /var/log/onetime.log
\&     log4j.appender.FileAppndr1.Append = false
\&
\&     log4j.appender.FileAppndr1.layout = org.apache.log4j.PatternLayout
\&     log4j.appender.FileAppndr1.layout.ConversionPattern=%d %4r [%t] %\-5p %c %x \- %m%n
\&     ###############################
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
If somebody wants to create an appender called \f(CW\*(C`org.apache.log4j.ConsoleAppender\*(C'\fR,
we want to translate it to Log::Dispatch::Screen, and then translate
the log4j options into Log::Dispatch parameters..
.SS "What's Implemented"
.IX Subsection "What's Implemented"
(Note that you can always use the Log::Dispatch::* module.  By 'implemented'
I mean having a translation class that translates log4j options into
the Log::Dispatch options so you can use log4j rather than log4perl 
syntax in your config file.)
.PP
Here's the list of appenders I see on the current (6/2002) log4j site.
.PP
These are implemented
.PP
.Vb 6
\&    ConsoleAppender     \- Log::Dispatch::Screen
\&    FileAppender        \- Log::Dispatch::File
\&    RollingFileAppender \- Log::Dispatch::FileRotate (by Mark Pfeiffer)
\&    JDBCAppender        \- Log::Log4perl::Appender::DBI
\&    SyslogAppender      \- Log::Dispatch::Syslog
\&    NTEventLogAppender  \- Log::Dispatch::Win32EventLog
.Ve
.PP
These should/will/might be implemented
.PP
.Vb 2
\&    DailyRollingFileAppender \- 
\&    SMTPAppender     \- Log::Dispatch::Email::MailSender
.Ve
.PP
These might be implemented but they don't have corresponding classes
in Log::Dispatch (yet):
.PP
.Vb 2
\&    NullAppender
\&    TelnetAppender
.Ve
.PP
These might be simulated
.PP
.Vb 2
\&    LF5Appender \- use Tk?
\&    ExternallyRolledFileAppender \- catch a HUP instead?
.Ve
.PP
These will probably not be implemented
.PP
.Vb 4
\&    AsyncAppender
\&    JMSAppender
\&    SocketAppender \- (ships a serialized LoggingEvent to the server side)
\&    SocketHubAppender
.Ve
.SH "ROLL YOUR OWN"
.IX Header "ROLL YOUR OWN"
Let's say you've in a mixed Java/Perl environment and you've
come up with some custom Java appender with behavior you want to 
use in both worlds, \f(CW\*(C`myorg.customAppender\*(C'\fR.  You write a
Perl appender with the same behavior \f(CW\*(C`Myorg::CustomAppender\*(C'\fR. You
want to use one config file across both applications, so the
config file will have to say 'myorg.customAppender'.  But
the mapping from \f(CW\*(C`myorg.customAppender\*(C'\fR to \f(CW\*(C`Myorg::CustomAppender\*(C'\fR
isn't in this JavaMap class, so what do you do?
.PP
In  your Perl code, before you call \fBLog::Log4perl::init()\fR, do this:
.PP
.Vb 2
\&    $Log::Log4perl::JavaMap::user_defined{\*(Aqmyorg.customAppender\*(Aq} = 
\&        \*(AqMyorg::CustomAppender\*(Aq;
.Ve
.PP
and you can use 'myorg.customAppender' in your config file with
impunity.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
http://jakarta.apache.org/log4j/docs/
.SH "LICENSE"
.IX Header "LICENSE"
Copyright 2002\-2013 by Mike Schilli <m@perlmeister.com> 
and Kevin Goess <cpan@goess.org>.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Please contribute patches to the project on Github:
.PP
.Vb 1
\&    http://github.com/mschilli/log4perl
.Ve
.PP
Send bug reports or requests for enhancements to the authors via our
.PP
\&\s-1MAILING LIST\s0 (questions, bug reports, suggestions/patches): 
log4perl\-devel@lists.sourceforge.net
.PP
Authors (please contact them via the list above, not directly):
Mike Schilli <m@perlmeister.com>,
Kevin Goess <cpan@goess.org>
.PP
Contributors (in alphabetical order):
Ateeq Altaf, Cory Bennett, Jens Berthold, Jeremy Bopp, Hutton
Davidson, Chris R. Donnelly, Matisse Enzer, Hugh Esco, Anthony
Foiani, James FitzGibbon, Carl Franks, Dennis Gregorovic, Andy
Grundman, Paul Harrington, Alexander Hartmaier  David Hull, 
Robert Jacobson, Jason Kohles, Jeff Macdonald, Markus Peter, 
Brett Rann, Peter Rabbitson, Erik Selberg, Aaron Straup Cope, 
Lars Thegler, David Viner, Mac Yang.
